(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     75341,       1456]
NotebookOptionsPosition[     63294,       1195]
NotebookOutlinePosition[     74153,       1411]
CellTagsIndexPosition[     74110,       1408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Switch the Cases of Characters in a String", "Title"],

Cell["\<\
Write a function that takes a string and switches lowercase letters to \
uppercase letters and vice versa.\
\>", "Text"],

Cell[CellGroupData[{

Cell["More details", "Section"],

Cell["For example, \"John Doe\" \[LongRightArrow] \"jOHN dOE\".", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["InvertString", "InlineCode"],
 " that takes a string and replaces all its lowercase letters with the \
uppercase version and vice versa."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "\"\<Switch The casE\>\"", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[1]:="],

Cell[BoxData["\<\"sWITCH tHE CASe\"\>"], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "\"\<John Doe\>\"", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[2]:="],

Cell[BoxData["\<\"jOHN dOE\"\>"], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "\"\<WolfRam\>\"", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[3]:="],

Cell[BoxData["\<\"wOLFrAM\"\>"], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "\"\<AbCdEfGhIjKlMnOpQrStUvWxYz\>\"", 
  "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[4]:="],

Cell[BoxData["\<\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"\>"], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "\"\<lower, thEN UPPER\>\"", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[5]:="],

Cell[BoxData["\<\"LOWER, THen upper\"\>"], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvertString", "[", "Pi", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"InvertString", "[", "\[Pi]", "]"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[6]="]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[1., 0.478, 0.196],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider"],

Cell[BoxData[""], "WCIntroDividerLine"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Manjunath", " ", "Babu"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"InvertString", "[", "s_String", "]"}], ":=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"LowerCaseQ", "[", "#", "]"}], ",", 
        RowBox[{"ToUpperCase", "[", "#", "]"}], ",", 
        RowBox[{"ToLowerCase", "[", "#", "]"}]}], "]"}], "&"}], "/@", 
     RowBox[{"Characters", "[", "s", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.694109121280773*^9, 3.69410915351048*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[1., 0.478431, 0.196078], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[1., 0.478431, 0.196078], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[1., 0.478431, 0.196078], FrameStyle -> 
          RGBColor[1., 0.478431, 0.196078], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[1., 0.478431, 0.196078], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm]], 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; If[
        Not[
         StringQ[
          If[
           Not[$CloudConnected], 
           CloudConnect[], $WolframID]]], 
        MessageDialog[
        "Users must authenticate with the cloud in order to submit \
solutions."], 
        With[{WolframChallenges`Common`Private`t$ = Round[Quantity[
              SessionTime[], "Seconds"]/Replace[
            WolframChallenges`Common`$CloudRefreshFrequencySeconds, Except[
               PatternTest[
                Blank[], NumberQ]] :> Quantity[7200, "Seconds"]]]}, 
         Function[WolframChallenges`Common`Private`eval, If[
            TrueQ[WolframChallenges`Common`$ActiveClearing], 
            Quiet[
             Unset[
              Once[
              WolframChallenges`Common`$OnceCache; 
               WolframChallenges`Common`Private`eval]]]]; 
          Once[WolframChallenges`Common`$OnceCache; 
            WolframChallenges`Common`Private`eval], HoldAllComplete][
         WolframChallenges`Common`Private`t$; (ReleaseHold[If[
              TrueQ[WolframChallenges`Common`$Debug], 
              Print[
               SlotSequence[1]]]; HoldComplete[
              SlotSequence[1]]]& )[
           "Refreshing (", WolframChallenges`Common`Private`t$, "): ", 
            FileNameJoin[
             Part[
              URLParse[
               First[
                CloudObject[
                "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/wc/symbols/HandleResponse"]], "Path"], 
              Span[4, All]], OperatingSystem -> "Unix"]]; CloudGet[
            CloudObject[
            "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/wc/symbols/HandleResponse"]]]][
         With[{WolframChallenges`Common`Private`t$ = Round[Quantity[
               SessionTime[], "Seconds"]/Replace[
             WolframChallenges`Common`$CloudRefreshFrequencySeconds, Except[
                PatternTest[
                 Blank[], NumberQ]] :> Quantity[7200, "Seconds"]]]}, 
          Function[WolframChallenges`Common`Private`eval, If[
             TrueQ[WolframChallenges`Common`$ActiveClearing], 
             Quiet[
              Unset[
               Once[
               WolframChallenges`Common`$OnceCache; 
                WolframChallenges`Common`Private`eval]]]]; 
           Once[WolframChallenges`Common`$OnceCache; 
             WolframChallenges`Common`Private`eval], HoldAllComplete][
          WolframChallenges`Common`Private`t$; (ReleaseHold[If[
               TrueQ[WolframChallenges`Common`$Debug], 
               Print[
                SlotSequence[1]]]; HoldComplete[
               SlotSequence[1]]]& )[
            "Refreshing (", WolframChallenges`Common`Private`t$, "): ", 
             FileNameJoin[
              Part[
               URLParse[
                First[
                 CloudObject[
                 "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/wc/symbols/CheckAnswer"]], "Path"], 
               Span[4, All]], OperatingSystem -> "Unix"]]; CloudGet[
             CloudObject[
             "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/wc/symbols/CheckAnswer"]]]][
          CloudObject[
          "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-9478-\
f11a7a0d89ab/wc/api/check"], {"InvertString"}, "4ef0b57ac25a229e"]]]; 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Appearance -> None, Method -> "Queued", Evaluator -> 
     Automatic], 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    DynamicModuleValues :> {}],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10]],DynamicBox[
    ToBoxes[
     Refresh[
      If[
       Or[
        Not[
         TrueQ[$CloudConnected]], 
        And[
         StringQ[$WolframID], 
         StringMatchQ[$WolframID, 
          Apply[StringExpression, 
           Flatten[{"anonymous+", 
             Riffle[
              Table[
               Repeated[DigitCharacter, {1, 3}], 4], "."], 
             "@wolframcloud.com"}]]]]], 
       Column[{
         Row[{
           Text[
            Style["Note: ", "SigninText", Bold, Background -> None]], 
           Text[
            Style[
             If[
              TrueQ[$CloudEvaluation], 
              Button[
               Mouseover[
                Style["Sign into Wolfram Cloud", "Hyperlink"], 
                Style["Sign into Wolfram Cloud", "HyperlinkActive"]], 
               NotebookLocate[{
                 URL["https://lab.wolframcloud.com/app"], None}], Appearance -> 
               None, Method -> "Queued"], 
              Button[
               Mouseover[
                Style["Sign into Wolfram Cloud", "Hyperlink"], 
                Style["Sign into Wolfram Cloud", "HyperlinkActive"]], 
               CloudConnect[], Appearance -> None, Method -> "Queued"]], 
             "SigninText", Background -> None]], 
           Text[
            Style[" to save", "SigninText", Background -> None]]}], 
         Text[
          Style[
          "your work on challenges and keep track of progress.", "SigninText",
            Background -> None]]}, Alignment -> Left, Spacings -> 0], 
       Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3fm3VPWd//ted1jr/nj/hfv7/eUu4zKapTExg0m+xsSOK0nbnY7dZvim
u5NvOkl3WhAHbBQnjBojMWkjzhhURMUgMgkis8gs8yQyKCIKorL3ZX/eZ1dj
QXHOqVPn7NqHx2OtZ5bhVG12FeenV9Xa+//5h59d8sP/7a/+6q9+8X8d+59L
Lv/3z/3rv17+H3/9fx/7P5f+9Bf/80c//cEVX/npL3/wox/866f/4X8/9of/
77H/2fR//tVf/R/H/nvPnj25JEmSJEmSJEnqX3v37s03b96cv/nmm/nBgwfz
Q4cOpao+L0mSJEmSJEmS6trOnTvzbdu25QcOHMjff//9tLvv3r1bkiRJkiRJ
kiS12aZNm/J33nmnsbsX33+XJEmSJEmSJEn9r/jO+/r16/P9+/fn7733Xtre
B+Pv2TV/fv7Gb+/Md/zTj/Jt3/p6vvWLn00V/138WfGz4jFVvQ8bN27MFy9e
nM+YMSN/9tln88mTJ6eK/y7+rPhZ8RjnJ0mSJEmSJEnqrXXr1uVvv/12Y3ff
tWtXx3pjwSv5jn//Zb71/LPzQxd9Ic+/fXGe/+238vzvvx0V/33sz4qfFY8p
Hls8p5PncKqKrXrOnDn5k08+mc+aNStfsGBBvnTp0nz58uWp4r+LPyt+Vjym
eGzxHOcnSZIkSZIkSWrV2rVr87feequxu7/xxhsdaecD9+dbL/x8/tElX83z
f/hOnl9xWZ7/Y4uKnx17TPHY4jnFczt1Hq1atmxZPmXKlHzu3Ln5a6+9lq9c
uTK1YsWKT1T+efGY4rHFc4rnnu7nJ0mSJEmSJEk6eWvWrEm7+8GDB9P2Xtxr
daDtuPOO/N2vfC7PL7vkk3v7P/zNyTt+fz/2nOK5xTE6cS4nq/iO+PTp09P1
WZq37GK/Pr7mjbt4TvHc4hin6/lJkiRJkiRJklrX6d19xwP3x+ZeXEfmpHv7
d5o6yf5+7Llpez92rE6/3ldffTXt0sV3wo/ftI/fssvruJxs3y6eUzy3OEZx
rNPt/CRJkiRJkiRJp67Y3fft25e/++67aXvfsWNH222fPz/dLzV9z/2Ezf07
eX75d0/e8ft7+bxjxyiOVRxzIOd0fK+//nq6H+nx3yNv3rJbdfy+XX6vvDhW
cczT5fwkSZIkSZIkSb23evXqzu3u//aL/MNvfPW/ry3Tl8291fZ+7BjFsYpj
duq1zp49O10Dvb+bdqttuzhWcczT5fwkSZIkSZIkSb1X7O579+5Nu3vR9u3b
22ve3HzbeZ+O/fxUm/v3mzrV9n7s/xfHLI7d9nn1tG7duvypp576xDVZ+rNp
H79tH//84pjFsYf7+UmSJEmSJEmS+taqVavS7n7gwIG0u2/btq2ttt9xe37o
oi80fde9l839VNt7z3fei2MWx273vMqK+4zOmjXrE98lP9luXVwT/fhOtW0X
xyqOWRx7uJ+fJEmSJEmSJKlvFbv7nj17Grv71q1b22rbj/8xz7998Se/696X
zf2k2/tx33k/dszi2O2eV1lxn9Fifz7Vrt28abfato/ftYtjFsce7ucnSZIk
SZIkSepbxTZb7O7vvPNO2t7bPtZfX5Tnf/utk3/X/fh9/e+//clOtr0f/533
Y8csjj3Q1/nMM8/kS5cubXnd9Fab9sm27eOvo14cszj2cD8/SZIkSZIkSVLf
Knb33bt3N3b3LVu2tNXWL342dvRO7+7HHlMcu93zKps8eXLapPvyXfJly5al
+vKd8uK/i2MP9/OTJEmSJEmSJPWtYpstdvf9+/en7X3z5s1tteUL5w3a7l4c
u93zKivuLzpYu3Zx7OF+fpIkSZIkSZKkvlVss2+++eaAd/fBvs7MQF/nYF/H
ZbifnyRJkiRJkiSpbxX7bLG7v/3222l737RpU1sN9n1V2z2vssG+b+lwPz9J
kiRJkiRJUt8qNtpdu3Y1dveNGze21ZZxt+aHLvpCnl9x2cm/836q7f3yFt91
P3as4pjFsds9r7KXX345nzVr1il37ZNt2yd7zPG7dnHM4tjD/fwkSZIkSZIk
SX2r2GmL3f2tt95K23u7x9k0a2a+7bxPx25+/Hfee9veT7a5l7v7sf9fHLM4
9kBfZ7FBF9c5LzfpU23bp6r5+cUxi2MP9/OTJEmSJEmSJPWtYqt94403Grv7
hg0b2m7LL/5X/uE3vtr0nfeTbO8nq3lzP3aM4ljFMQdyTsc3Y8aMfO7cuZ/4
Tnl/tu3jr5teHKM4VnHM0+X8JEmSJEmSJEm9V1yrpNjd9+3bl7b39evXt92G
WbPyLV84L88vuyS2875u782be9GxYxTHKo45kHM6vmKPLr7/vXjx4n5v282b
dnGM4ljF/z9dzk+SJEmSJEmS1HvF7r5z586O7O5Fm/54b/7uVz6X53//7ZNs
7z37+yf6mxM392PPLY5RHKvTr3fhwoXpPqPLli1rbNvH79vHb9zH/1n5uOI5
xXOLYxTHOt3OT5IkSZIkSZJ06oqNttjd9+7dm7b3119/fcBtuvWW2N6L772X
15w5YX8/yd5+RXzPPW3ux47RiXM5WS+99FLapY//XvnJ9u3j9+zjv0dePLc4
xul6fpIkSZIkSZKk1i1dujTfsWNHY3dft25dR9p47/h8y5c+l390yVfje+3H
7+/NXRH3UC0eWzyneG6nzqNV8+fPz59++ul0DfRivy426+aNu9yyi4rHFI8t
nlM893Q/P0mSJEmSJEnSySt39z179qTtvZPHXj/jxXzzv/4s3/LZT+eHLvpC
nn/74jz/22/FNWiKiv8+9mfFz4rHFI8tnjNUr73Yql988cX8iSeeyGfNmpUv
WLAgvR/ldVyK/y7+rPhZ8ZjiscVznJ8kSZIkSZIkqVVLlizJt2/fnu/evTvt
7mvXru14r0+blm+69eZ8y4/+Md9yyf9I90tNFf997M+KnxWPGYy/uy8V17gv
vis+7dg5TJkyJd2PtKj47+LPip8Vj3F+kiRJkiRJkqTeKnb3bdu2pd29+M77
mjVrJEmSJEmSJElSmxX34Sx29zfffDNt76tXr5YkSZIkSZIkSW1W7O5bt261
u0uSJEmSJEmS1IEWLVqUdvddu3al7X3VqlWSJEmSJEmSJKnNFi5cmG/ZssXu
LkmSJEmSJElSByp2982bN+dvvPFG2t6rPh9JkiRJkiRJkurcggUL0u6+c+fO
tLuvXLlSkiRJkiRJkiS12SuvvJJv2rQp7e7Fd96rPh9JkiRJkiRJkupcubvv
2LEjbe8vv/zySZs3b54kSZIkSZIkSad9rXb0svnz5+cbN25s7O6TJ0+WJEmS
JEmSJEltVuzuGzZsyLdv3562dwAAAAAAoH3Fd96L3X3btm12dwAAAAAAGKDi
WjTr169Pu3vxnXcAAAAAAKB95e6+devWtL0DAAAAAADtmzt3bv7666/b3QEA
AAAAoANeeumlfN26dfmWLVvS9g4AAAAAALSv3N03b95sdwcAAAAAgAGaM2dO
vnbt2rS7F995BwAAAAAA2lfs7mvWrMk3bdqUtncAAAAAAKB9s2fPtrsDAAAA
AECHzJo1K1+9enW+cePGtL0DAAAAAADtK3f3DRs22N0BAAAAAGCAZs6cma9a
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
nnFfNH9SVPW/e39rvl7NwskRAAD0g90dAIBTsru3x+5udwcA4LRldwcA4JTK
+2Vef0FU9S7a38rrnezZEo37dtT8uPt+lmp1fZd+u//nUXn8rSuiFrLDB1ON
zzWeuT2V7dueysdeFJXHe/Dfo0nXRzd8JRpkjfen5/064X0ccWZUfu5wzxVR
1b8H/a38PGPVnAgAAPrB7g4AwCnZ3dtjd7e7AwBw2rK7AwDQJxuXRCPPiqre
Rfva9HujmROi5p+PuTCVvfdOasB2rY/K49/9/aivfv/jqNzRe+6z2jjeIyNS
2ccfpxrXfbn63GiINN6vnvfvhPf1nh9E5f5e7thV/z70tfI6OQAA0Aa7OwAA
fWJ37xu7u90dAIDTnt0dAIB+WTY1qnoX7a3RF6Syt3ak8mvOi5oft3Jm1Cl/
Hh2Vx1/wVNRXrT4fmHh16oTr4Dx9a9TzuI5dJ6evVs6OWv07lL8vPedf+e9F
bz3/2wgAAAbA7g4AQL/Y3U/N7m53BwDgtGd3BwCgLa324W6pvL7M1Lui5p//
179EHZIdejfVuI9rT9nh91J91nydmj/9PNVyT2/e3cv7sw618v1sfp/HXRo1
v65u69FRqSzLUgAAMBB2dwAA2mJ3/wS7u90dAABKdncAAAakvK9n1btpWbl3
79+Vyq89P2p+XHm/z055ZVJUHv+xUVG7yvup3v+LqJWm97+y3X3nuqjVv0t5
PZ/y9VT9e1J2709S2UcfpgAAoBPs7gAADIjdPdjd7e4AANDD7g4AwEA0rn8y
4ZdR1TvqwyOi5h287L6fRp12zw+i8u/ZtDRq15M3Rtd/MWql5/oojd39wL5U
Ze77WdT8vpfXoVkxM6r69+T276Yq+5wCAIBhze4OAMBA2N172N2D3R0AAOzu
AAB0RHbkcCq/+/tRVXvqmnnR766Imn++dn7UKavmRI099zvRQK2bH5V7+v7d
qRM8MiJqPK7n+jpVWbcgan7fR3wqlb39Rqrl9X8Gu5svTrV8PwEAoAPs7gAA
dILd3e6e2N0BAMDuDgBAR2UH307lt3wzGqo99ZpzU43dufnnY76calwXZ6D2
bImuOS8q/55Xp0UDfR/L+3yOuTAad2nUfD/YP/086pLdvfH+9rzfJ/w7zJsY
lfedHarfj+sviPZuiwAAYBDZ3QEA6CS7u93d7g4AwOnO7g4AwKAo981y7xzs
XbW8n+fSqVHzzyffHA1QYw+/47KoPP6U21JZlqU6ptz3b/xqNOqcqNz3//jP
Ubm7d8t9Qsv3u/nfYcKvokVTosH+vSjfr60rIwAAGAJ2dwAABoXdvTPs7nZ3
AABqx+4OAMCgKvfOcv8crH111gPRpOuj5p+vnBkN1LTxUXnch0ekOr63N8ne
2pnKb/5G1NiVz44au/v7qcqtmBk1/ztcd34q27c9NWi/Dz33cW3c9xYAAIaQ
3R0AgEFld+8Iu7vdHQCA+rC7AwAwJMr9s9xDO72zvr4guv07UdPPs/f2p9q2
e3M08qzohq+kssPvpYZKdmBfKr/t0qj5feiS+4Y23u9W/15vbowG6zpE8ydF
AABQAbs7AABDwu7eEXZ3uzsAAN3P7g4AwJAq99AO76zZWztS+VVnR+XPevbx
Abv/51F53CXPRRXJ3nsnld/zg6g8r//8UrRzXVS18v1v/jdb/kI0/kdRp34X
nv9tBAAAFbK7AwAwpOzuHWF3t7sDANC97O4AAFSi3EcHurP27OyN+442//z3
P4raVV6/pjzeLd9MZR9/nKpa9uGRVP7YqKg8z2vOjVbNjqpSvv/N/y6zJkQT
r4kG+nvw6KjUYN/fFgAA+sLuDgBAJezuHWF3t7sDANB97O4AAFShsY/27KVt
7603fjXatipq/vnj10bt+u3fR+XxFjwZdZnG+/niH6Pm92H6vans6NHUkCnf
/+bzmTLuk7X773/vT1LZRx+mAACgG9jdAQCogt29s+zudncAALqH3R0AgCo1
9tKe/bTfu+ttl0YbFkXNP3/61qi/1syLyuNcd34qO/JBqtfXNcDr0DSe/+SN
0eSbo+XTUo3ry7Ty6rRo1DlR8079zt7UoHv6lqj536W8vsy08VF//91v/24q
O3wwBQAA3cTuDgBAlezuvTzf7m53BwCgduzuAAB0hb3boivP6KmP++td34ua
d/KyqXdF/XX35VF5nKfGRi1k+3elGjvzni1Ru1p9jlA25sJo+QtRK7s2RLd9
Kyqff/0F0eq50WBpdf/cR6+KZk6I+ru7v7khAgCALmR3BwCgK9jdP8nubncH
AKC27O4AAFQpO/xeKr/7+1Gb1xvJ186Pmn/+5NiorzYtjZqPs3VlVJ53eR/T
lx6Orjo7mjcxGuj7cvDtVON8Xvh9VO7lza9/86tRq+N98H6q5X1sp9yW6vX6
Nf3V6jozk66PWt0HtrfcTxUAgC5mdwcAoEp29xbvi93d7g4AQG3Z3QEAqMKA
76daNvaiaPPyqPnnj4yM+mrCr6Ly+TdfHJXnXe7tD/06Kh834lPRrAmpxnVn
Ov2+HTkcDfT4i6dEzfdd/c13o52vRwP1+HXRCTv/uGjqnVG7//49nyM0/l0A
AKAL2N0BAKiC3b3N983ubncHAKDr2d0BABhKjX201fVO+tt150e7N0UtrkfS
63m9tTN1wn1dn7k9Kh936N1U/sy46KaLo+a/t9zhJ16Tyj44lOo65f1sf//j
qDz/kWdFM/6Uyj7+ONVvrT5XeWF89MQN0UB/D8r7twIAQBewuwMAMJTs7l3G
7g4AAB1ndwcAYEiV++hAd9amsnf2pk742ZgvR72ZelfU/Pzyvqa9WfZ8VNM9
uPF5yKKnozEXRuXruOt70Zsbo7668atR8/uycHL0p59HnfpdWPxsBAAAFbK7
AwAwpOzuXcnuDgAAnWN3BwBgSMyfFHV4b2+0bVU09mtR8y7/3jupZo37u46+
ICqfc93nUtnRo6lWGj8f/8OofP4f/zlV1/t9Zh+8n8rv/LuofF1XfTrq5foz
2fsHUi3/vTa/Gt3yzahTvwfl9XE2LIoAAKACdncAAIaE3b1W7O4AANA+uzsA
AINq1ZyovM/oYO3ui6dEf/pfUfPPV86Omr02PWp+/MNXRr1Z8lxUPu/qz6Qa
172pu9Vzo+b3p+dzhpafS6yaHTU/r+f34L+vC9R0H9tOde1no13rIwAAGEJ2
dwAABpXdvd7s7gAA0G92dwAABsXWldGoc6LB2tvLHr8umnFf1PzzJ8dGzVrd
17O872dvmq/D8vzdqezg26l8++po/cJo7cvRhsVRz31Ks8MHU90me2tHqvH6
rjs/le3flWrp6Vui5vf1t9+PyvdhsH8veu7rmu3fnQIAgKFgdwcAYFDY3e3u
dncAAE5TdncAADpq77bo+guiwd5Vy276elTu/Sfsr19Llfc5zQ7sS+Ujzoya
Ht/rrrx3a9T895T3HW33dYw6OyrvN1rer/WRkdEz46KXHo6WTY02LY32bEll
Rw6n2pV9eCSV3/W9qDy/lTOjVs8rrztzw4VR8+ubeucnG6rfj9u/m+rWzzcA
ABhe7O4AAHSU3d3ubncHAOA0Z3cHAKATGtdVKffiodpTm+u5bkt+w1ei5p+v
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
yt5+I9W4P+ujo6Ju+Tyg/NwEAACGEbs7AAB1ZHe3uwMAQLeyuwMAUEt7tkRV
78a97uJnRff+z2j6vdHqudHebals/+5UvmNNtHFJtHZ+VO7m21dHPa8/e++d
VL5lefTyxKi8zs11n4uqfh96qfE5CgAADAN2dwAAasnubncHAIAuZXcHAKCW
NiyKumAz7ug+f8OF0a2XRHf9XXT7d6KxF0XXnBtVfd6dqvwcBQAAhgG7OwAA
tWR3t7sDAECXsrsDAFBLy6ZGVe/F6kzldXUAAGAYsLsDAFBLdvfhld0dAIBh
xO4OAEAtzX4wqnovVmd6dVoEAADDgN0dAIBasrsPr+zuAAAMI3Z3AABq6Zlx
UdV7sTrTS49EAAAwDNjdAQCoJbv78MruDgDAMGJ3BwCglh4eEVW9F5f99vtR
1efRWyM+FY27NKr6fMqeuyMCAIBhwO4OAEAt2d3t7gAA0KXs7gAA1NL4H0VD
vQ9f9eno8Wujneui0gO/iqresVv11NhUlmWpfN386L/+JarqvCZeHQEAwDBg
dwcAoJbs7nZ3AADoUnZ3AABq6ZZLosHeg0dfEE27J5Ud2JcqZUePphr/f9/2
VGOfr3pnL7v2/FT23v6o6bwbdq2PJl0fDdXr+MM/RQAAMAzY3QEAqCW7u90d
AAC6lN0dAIBaGnV21On9t7zf6IKnUtmHR1KlcrfOZ9wXjbkw2royKk29K6p6
by+b91hUevY30d2XRyump074HOHdt1L5C+Oj8nOIjr/v344AAGAYsLsDAFBL
dne7OwAAdCm7OwAAdZIdPpjq2N77Xz+Neu4v2rjfaGnPlujJG6NR50TNx+nZ
r8vnZ4ffS+VjvhxVtbf3fI6QffxxKt+7NRp5ZtT8+LEXRS89kmq8jvL9Lz+H
WPBkdNul0UDPc/TnIwAAGAbs7gAA1Ind3e4OAADdzu4OAECt7N4c9XfXvers
6Ikx0Zsbo2YbFkf3/zy68oye+vj3LH42Ki16Oqpqd1+3ICr96edRX59/zXlR
z3VpsrffSJUan1OsmReV90dt83ybr+sDAAB1ZHcHAKBW7O52dwAA6HJ2dwAA
amX9oqi3Dbe8vsuLf0w17ofaI/vow1S+dGp0x2XRQHfunvusZh+8H5X3Kb3r
e9FQ7e0P/Coqlbv4QI874szo4SujbauiZjtfjx6/Nhp5VtTb7v7WzhQAANSZ
3R0AgFqxu9vdAQCgy9ndAQColXInb95sy9285zovjV29R/b+gVQ+c0J0w4XR
YO3ez/82Km1+NRrsvf2qT0d7t6Wyjz9K5bd9Kxqsv/eeK6IVM1ONzxvK9//A
vlT+l7uj8j6qzcfZuiICAIAas7sDAFArdne7OwAAdDm7OwAAtTL7wej+X0Tl
fVCb9ezO+VM3RVd/Jhrs3fuE/XtrVHpkRDRUe/+ch6Khet1lN18czZuYyg6/
nyplRw6n8vmTolv/OurZ7QEAoM7s7gAA1Ird3e4OAABdzu4OAECdZB8eSbW0
ak505Rk9DfHe3FzT/U2z/btS+ahzok79Pc33cz34diq/5ryo6vfh+i+myvM7
4d+157o02aF3UwAAUGd2dwAA6sTubncHAIBuZ3cHAGBY+cNPoqp35ubWLYhK
L4yPOnX8nvvJNkwaE1X9uptb8GQEAADDmN0dAIBhxe4e7O4AAFAZuzsAAMPC
7s1R1btyq267NJV9/HFU3ld07Neido979+WpLMtS+fbVUbdcZ6e5O/4mAgCA
YczuDgDAsGB3t7sDAECXsLsDADAsTLktqnpX7q15j0WlZc9H7R5v64pUY3cf
/8Oo6tfZW1uWRwAAMAzZ3QEAGBbs7nZ3AADoEnZ3AADqLPvgUCq/9vyo6j25
tyb8MirPv9zLf3dF1NfjPH5tVB7n8MFUPvKsqOrX2VuPjooAAGAYsrsDAFBn
dvee49jdAQCga9jdAQCotQVPRVXvyH1t5cyoWeN+qL08/+pzU9mBfakTPDIy
qvp19lbP5wPZwbdTAAAwnNjdAQCoNbv7J9ndAQCgcnZ3AABq7c6/jarekXtr
zIWp7OOPUy2V149pdZyZE6JWNiyOqn69fa231wMAADVkdwcAoNbs7p9kdwcA
gMrZ3QEAqKWtK6Kqd+O+9pe7o140rh/Tcz2ZxvNv/kYq+/BIquXzy/u03npJ
VPXr7q2xF6Wyo0dTAAAwHNjdAQCoJbv7yZ9vdwcAgMrZ3QEAqKWJV0dV78a9
dkYqe2tHqs/K66+Ux1k5O+qrWQ9Elb/+PrZ6bgQAAMOA3R0AgFqyu5+a3R0A
ACpjdwcAoE6y9/an8qvOjqrei3vrv/4l6u/rLK8n8+SNUX+ff/DtVD7yrKjq
96G37vtZBAAAw4DdHQCAOrG79/H5dncAAKiM3R0AgFqp2/VTVrwYVeXhK6Oq
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
cPDu4nL3dseS3B0AYKzI3QEAxsSwc/fYa4n+vbNv6nweR9Y2zuOWezuY+K3G
vLVa4r7re9pltydD2HZHalafa8ycONNNy2lXrm4/Nn08Hs6ilO8KXsqZ71br
Pyq5+4i1xfS6V0P40+7med4yP4SJY61n9dqDzdPNnhOm8473Ho/rXivR//7D
s43zWrEl5XMppZ364/+WpTkrBwDAsMjdAQDGxCjk7rG7G/ssT699sYOJE7lv
PNb6sbxjfJ9M78u84onO6v/+REN/+emtefrapy17VrQN2mS6Daaa+vmH2VeE
6ffyTj8qufsItsWiOSHMTfRZf7qD/fLI48193l/qZH3q/CnxXtWHOjk+Wmjo
776kmHkCANA3cncAgDExKrn7B3sTGeWFIbydMzvfPq8x24z7Kee1qXkc8el1
3WaakyGs/lb+7wySy559af51bhBNc/8XusxlRyR3H8W2SNanm3H7tyfGhF+8
uvN5xAaRu/fybgUAAAZC7g4AMCaSufv+08Ory96fNtYlT//b5Dgg1y/Kv7w/
bm3OVx/a0n39O5G27Dcne5jhRCInvibnmCYjkLuPalvU9qk5Hb6ft07Tu347
6X9fZwC5e2e/MQEAYBjk7gAAYyKZu9+3IoSdj4ew7Ynuy5ZHQni1k3eaVk2F
cOffJcb1aDO+erJv86EO8trkmCSDHGcj+Q7Yta/0Ps/nGvtWT+/4fY6JRiB3
H9W2KK3L/PxjsmdJ7qP73u18HoPo717UPAEA6Bu5OwDAmEjm7kWV67vMsJve
Yzkru6/xwV82fnbF9g6Ws7O5zj31se5Ach07ed9my/km1un2x3JMNOTcfZTb
oqi6vJb4HUc3YznJ3QEACHJ3AICx0a/cvav8tmL3jxvnlTom9luN77ycfVNn
Gemm7zQuY+GK7uvbqecal922T39uid8LzJ6fY5oh5+6j3Ba3LC2mKm/8onFf
29/FOPFydwAAgtwdAGBsNOXuF4Yw76LeSpyHL8vTvzjLZAhLPtFYr5eONX5k
Y+I9nB31IT4ZwqJP9t4HuSuJZeceezyn+hx79qU5xhIfZu5+NrZFikRmPr2u
i3F05O4AAAS5OwDA2Ejm7t2MPd0PyXdtxpns+5W//WFj49+WPdnZvJvGNrmp
6NrnX3au8U868MbtHW7PIebuZ2VbpCgiM5e7AwAQ5O4AAGOjKXcfVL/vHLbP
S+TrT5f/vb4v/OwrZvL4vJLjwt/3dOFVz3S4cdnTT71a7PxPbe1wew4xdz8r
2yKF3B0AgILI3QEAxsQo5+7xeDPJ8WDuuLwxq93xu85n+0Jjnj+9+WDxVc+5
7LD/dLHz/2D3ELLmLudxVrZFilHO3evHa5K7AwCMPLk7AMCYGOncPXLq2cb6
1Zdu34W65uLhja2TXPa2F0OYeDmEAwWUiX0h7L5jfHL3s7ItUoxy7l4/Fo/c
HQBg5MndAQDGxKjn7rHtc5sz9/g9md1WtWGdZ3U/n56XPYAyyrn7WdkWKeTu
AAAURO4OADAmxiF3P3h7c4a6cE3386sfWyPO798rrqodLfusyZq7nMdZ2RYp
5O4AABRE7g4AMCZGPnefCGFuRo765mR3s3x8iLn744ms+e7FITzysxBW96Gs
jOb9drs2GmLufla2RQq5OwAABZG7AwCMiVHP3R+9OD1zj8v187ucZ2KcmZPF
Vjn3sged+acakXFmzpq2SCF3BwCgIHJ3AIAxMcq5+5EHG+o2vW5789gk3WSF
ySx/mO9VHXp7j9B7Vc+KtkghdwcAoCBydwCAMTGyufvREObVZaCzb0r/97gc
6nC8mcR7Wqe3Hiy89plemNdY95eODW7ZqYaYu5+VbZFilHP31346M88V24uZ
JwAAfSN3BwAYE6Oauyf7te8/NfO3369NjDezqLN5H7y7cfr7thRb91YO/7I/
+WnXhpi7n5VtkWKUc/cT+0LY8kQI26JyYNjfewAA0I7cHQBgTIxi7v779Y11
WvZk82cS9Z5e20EOmcwwZ3c5Tnw3PtjduOxblg5u2amGmLuflW2RYpRzdwAA
xorcHQBgTIxc7n68MfvMfN/mRGO9OxpvJrGMZH/6vorquOiTjct+s8Nxcgo1
xNz9rGyLFHJ3AAAKIncHABgTo5a7P/edxn7sm9/I/uxrtzfWvZPxZh5PjGNz
e0qf+n5JjC8/0GU3GWbuHs7CtkghdwcAoCBydwCAMTFKufupZxvr8oMlbSaY
CuEXf9eY0697pbtlzbkwTA9qeOsP9qYse2pAC08acu5+1rVFiiIy8z82zmN6
bc79HACAs4rcHQBgTIxM7p4y5shvz7Sf7E+7m3Lb8HbO3DaR2YfFK3pbhU48
nmj3hQNcdoMh5+6xs6otUhTSV30ihLmj0EYAAAyT3B0AYEyMSu6+fV4im9ye
f9rdP+6wn3xF8v2tnfSXb+XkRAjvtcn+/5Ts5x2VtR2sc2FGIHc/q9oiRSG5
e6JunYyp1M77p6L9dZjj6gMAkJfcHQBgTIxC7p4YQyPMnhOmc3R1nzEZwp2f
aMzPn3o136RrLm7O3p/OOW2aNx7Mn4u+MK8PefPxEF5tMSZ+kxHI3WNnTVuk
KCp3b/g9SAe/68jy3r5onhfVre+caJ7ydwCAUSZ3BwAYE8ncff/pAVdgKoQ7
E+O9vNJF9v/HrV2OE/5WCPM+1Zz5rniiwwocj9oy8a7W+55uM01Uv/u/0Lzs
ZStC6Oh7h4qJjTPrkmeMnpJE1nzL0i4WXMQ8RrAtRip3D03vHA63P9ZDpY43
rmvtO6+bepgnAAD9JncHABgTydz9oSdCOPBCCHuKLNuy+x0nx4jpJUvcPjcx
3szSfNO9f6Bx7OxaBnlpCNtejP7eatqjIWz5WfO0uXL32MnmceZLZVYIz2xu
P15N3Nf/wMYQlnyxcfrc438nxy+Zn3O6oudRmc8otcWo5e5N7wJu9f1Q1Fav
bozK79L/3PQ9Vf13b6e6qx8AAH0ndwcAGBPJ3L1vZVaYfi+x7OS43rMvDdMn
e1mZ5FgcHYw3c+at5ve61pcls0N45IEQtj0RlUdCWP+z6N8uyfz89OZOxqqZ
DGHNN7KXvWhOtLzVIezcXP4OY+fjIWy4I4Q7Ls+e5gcL84/Vsyox1s4di0N4
5p4QXsrIbPs1j6G3xYjn7nGWnvW9xMo7Q9gS7Ztbon10+ez265A2pn61DO3d
ygAAtCN3BwAYE482j2/elxJn6g25+1QIdzf2S57efLD39fnDxua8P9d4M7HJ
EDbO7W09b5kfLa/LMbL3/rL3dr7+mhD2dDKmeeS129PnlbufeEHzqDeUtuhT
7p58f0HXuXvsrfTxYTJLxnhLyTrVl0PGeAcAGFVydwCAMbHpOx1keL3k7teE
6frxWpL5eFdjgmetUyI7v29LZ9OfPBDC6hs6W79FN4bwagHfG5w5HsKWO9LH
nG+3/E7z9pkVbh5jP22b9X0eCQNvi8TvJbr9ziDpT7sb6je97pUeZ3g0hLu/
kvO7hysycvSM8fRvubfHugEA0E9ydwAAxt9kCBMvlMcxuXt2CIsuD2HBJeWy
6OoQli8OYdu2EE70qX/wsQPR/B8KYeUNISypW/aCy8vj3qy+M4RdUf1OFrH8
qXLGXb9+K1d3+E7TIuaRYaBtMSZOHCiP5VO/bzbsl+3GaY/a6pmfzbTlQ48W
s60AAOgbuTsAAAAAABRH7g4AAAAAAMWRuwMAAAAAQHHk7gAAAAAAUBy5OwAA
AAAAFEfuDgAAAAAAxZG7AwAAAABAceTuAAAAAABQHLk7AAAAAAAUR+4OAAAA
AADFkbsDAAAAAEBx5O4AAAAAAFAcuTsAAAAAABRH7g4AAAAAAMWRuwMAAAAA
QHHk7gAAAAAAUBy5OwAAAAAAFEfuDgAAAAAAxZG7AwAAAABAceTuAAAAAABQ
HLk7AAAAAAAUR+4OAAAAAADFkbsDAAAAAEBx5O4AAAAAAFAcuTsAAAAAABRH
7g4AAAAAAMWRuwMAAAAAQHHk7gAAAAAAUBy5OwAAAAAAFEfuDgAAAAAAxZG7
AwAAAABAceTuAAAAAABQHLk7AAAAAAAUR+4OAAAAAADFkbsDAAAAAEBx5O4A
AAAAAFAcuTsAAAAAABRH7g4AAAAAAMWRuwMAAAAAQHHk7gAAAAAAUBy5OwAA
AAAAFEfuDgAAAAAAxZG7AwAAAABAceTuAAAAAABQHLk7AAAAAAAUR+4OAAAA
AADFkbsDAAAAAEBx5O4AAAAAAFAcuTsAAAAAABRH7g4AAAAAAMWRuwMAAAAA
QHHk7gAAAAAAUBy5OwAAAAAAFEfuDgAAAAAAxZG7AwAAAABAceTuAAAAAABQ
HLk7AAAAAAAUR+4OAAAAAADFkbsDAAAAAEBx5O4AAAAAAFAcuTsAAAAAABRH
7g4AAAAAAMWRuwMAAAAAQHHk7gAAAAAAUBy5OwAAAAAAFEfuDgAAAAAAxZG7
AwAAAABAceTuAAAAAABQHLk7AAAAAAAUR+4OAAAAAADFkbsDAAAAAEBx5O4A
AAAAAFAcuTvAuWXy1PFwanJq2NUYKXGbHNcmMD4mD4VNv1oZVq5cGX61blPY
f/TUsGt0zmp1/nRuHS7XewCA4ZK7A5xDTm8PXz7v4+GjF/xbkFJVnH5Rm8AY
eXffL8Pfn3de+Mu//MtaOe8//CgcH3bFzkWtzp/OrcPleg8AMHRyd6A/JsP+
XTvCjl0HQ56eVlPH3ww7nt8RJo6f6XvNzmnRc/jXoufwj1zkObxGmzDCzhx7
Onz7S7PCrK/eHH5z1PkxhCNhwfl/UcraL7rxwbD/8OGwc929YeljBzqYx2Q4
depUuRTUF3iyOr/jp3Jd88bLVNh62+zw+c9/Kdx47wuN69fq/Nny3NpinhTD
tQ0ShnvecT0HODfJ3YG+OPNK6XkvzkYemGh3bzkZHrzsfy199htrfjuQ6p2z
Bv4cPhVOHR/x37nLJhia9sfHzlv/a61P9w+f+8MA6zaijj1Z6uv+sU//SzjS
xeT71v2kqa/8RXPuD4e6PUWd2hNuvfKCxr73H/tyuPf5tzqf1+lXwoIrvxqu
Wfjr6Ko4Qir9puN1+9in/rXxdwXd5u6t5kkxBnBtm5o8FY6fld81MZ7aXFOH
fN4Zv+v5qN3Dj1p9APKRuwP9sm/5P5TuLf/8mrUtn8nOHPxlOav48PfDmwOr
3Tlq0Bnzu9tLGddfLXxhEEvrjtydYclxfLy782fl5/Tz/iY8sP/0ACs3mt7d
+aNSe3yxi3PKzmVfr2UeX73p1nDXXfNnMpgL/yW82emjfLT9rjrvY6XpP/7X
XwuL7rorLLj2otoybnisk++RJ8Oqb/9VpS6jlkO/E5Zd9r+V6vahyx9s/E6g
6/7uLeZJMQZwbdt5638O533878NzLp6MgrbX1OGed8buej5q9/CjVh+AnOTu
QN+ceaWcSUT3l6sz+7xPhYev/U+l+9DvPva7gVbvnDTojLnSt6ibjGxg5O4M
S97jY2oq/j8i7+7+aVe5+4mtP6rlHXfuOjHzh6k3w4LPfyjXd8SNjoRbP/8f
StN9+or7G3Lygxv/ubas1RP5spWD679Ty+tH9Vw0lbYTdp27t5gnxRjAtW33
z/+f0u87fjOKOyznnpzX1KGed8bpej5q9/CjVh+AnOTuQD8dqPR5/9Scx1Pz
jDNvPRT+5i/PC+d96J/CoYHX7hwkd28md2dYxuH4GDHd5e7v1DLy2Wl90N/d
XhsXbfXhfGPuVnP8j3/6n1J/p7Xz5xeX/v5nV6df+xpUxs4Z9dw9VY+5O30k
d+dc45parFFrz1GrD0BOcnegr+r6vD/alGdMhfXf+485+rpPheOHJ8LeXbvC
rl17w8Th44MfS3TqnbB/b7z8XWHiaIe/DZ08FSb27y1Nu2vv/nD4eJ5ftva6
zs3Tl5x5sXTPmuc5fOrUkWidK/XetT/kqnbSu+V75M/mvkfufVtPTR6vtffe
vRNRvdvMoa/ZRLQ+Rw9X2nFv2H+489EjTh19s9weO3aEXfsPF7Dv916nTpd3
9PD+yjrsCvsnTrSfpM7xw69Xjp2JcCp15btfn/I+vqsy3dGO2nY4x0cO0f5f
PVft3X8sdZ3iuu/dW96n9k4czT3rQta5cY4dH+/V3P2zC7flX8yxR0rf77Ya
E746Ltol976aa5Ybr/vb0ufnPvP79A9E59r42nfeR/9H2NOynd4Jt37pz8rj
0qzbGVZd9e/CRy8o4FzUx/2gQT9z96lT4fDE/srxvze6duadSw/nnKFcr8u6
P9d3f70/dfxw3X5yOOMcm62au+cfZ6aP93O93Kd1tJyZfWRHtH8d7rTR0mbZ
6X3LONWrR+3vAer04ZpaW360v6a3aXS+mdhTbvfoM0eLHLymy23ay71Ngy7u
4Ts+93Zynu+gPr2e2wCKJHcH+q3W5332rxv/8FY5C4n7C2b1dT+46c7wtfM/
1vDOutJY8H/95bDksX2Zy9y97OLoWfC/t+yDdWDVN0vzuvOl91L/Fk//UnSf
dmzTz0r1rC37P/wo39i7U4fCqlsub6p7XC685t/Cnoy6dbvO7ab/2Oe+H9Zt
WlPKQVrmOpNvhuXXXZpa79n3bst1//7u7jsa2ixZPnLR3U3L73W9w+TrYVlG
vWe1aO/22dChmVzsqXxjIU0dfz2sWnR10/sby9vhH8NzR9P71Jb3uy+H38SN
fHR7WHDZp1K342+O5+uT232dTobl8RioLceIqjixpfQc9OFL07bpPanb9KOz
/ik8l9av+Mwr4dvnfSx8YUmcfR4KP0+8r3Ju3XvIum3jkmgfX3bdF1P3lfPO
P79h3128672maQd6fFTaJK19Z9rr5bhiYWPUHsl5ffwz/xieOVzNoI6Ehxdc
0vSZz3z1X8PrrbKCAtY5qdPjvVWbpZ1PGpb18Hfa9pGvvmfkLy69P8eYv2+G
75330TZ548wYanfufT9zTvG1ama5R8LN53+489x9APtB5vWyh9w9+xo8FXav
mpu6vf961rfDml3HMpui43NObZGDvV4Xda7v9no/FS3z5pRlxuf8axY+HI60
PKij68OVn8g8f6WeN3toqyy57tNOv1hqg0uWvpw9o9zn2BB2rvxh6n45+94u
c95u71tGtV6FtXf7e4B6nVxT29/7f7m0T53e/2T49uc/3DSvy5dsrl0jTuxa
3bxPR8fQT57KeLdHv/e1Xu5tumzPqs7PvfnP853Up7dzG0B/yN2Bvqv0eY/f
vfVkXWC98eZyf8H0LHMqbF30ldr90ueuvDmsXLchbNqwouG9dRfc+OvUzCdP
H6z4M/E8frKj+T6++rdrb7qmtqxrFi0L9901P9yY5znmxMz79kr3eouWhw2b
NoVf3bcwfLlyX1p6XmzIOHpb59jO22beG/iZy74X7i1Nvybcmnh++vBXM3Kd
E43vCVx43/qwY9eO8Ku7bqjd835qztq2udTpg4+Ga6+8NlxXqffHPv+1cN11
14Vr43LtlWHOwl/XzaP39Q7Hnq6NExHvZzfetqrU3ivr3psY7w+PpY213DIb
mvlNRvyclOf7ltrYzpVl3nhbedtv+NXScNX5Hy3/+0f+MexJWZndlbEpZkXt
VM2TZ11za/jVhnj6JTPr0uE7iLupU7Uu7X7Pe/Dh/1n5XGP/4/p3WF503a3h
sed3hB2b1sw8D0XHxZrke8UqfZk+Gj1zfe9rf1Z5Zvt2uGvlfeGW624Jvzne
exuHM6+H753/kfJ++bmrwr0btoZdu54Py+uyyngfuuWWm6L99+a6rDIM5/io
tskF/9a8/1X+Ftf3yq99ulavJSvXl9qiekzE/bwnju8pZbrVNl36q41h3cqF
tf0s83ungtZ5RnfH+5nDT4froja76vMfqW2jantd03A+aVbdl3+SkdmUvVlq
n7h/+kttN2C53du9//Stypjtly9N70N/et8vateC0rWqMt+O+4cPYD/IvF72
kLtnzfPAqn+Yue7esjxsev75sGndiuicMHPuSLu2d3XOiQ3hel3Eub7r630l
3yufA/8xmu7ZsOP5TWHVbbNrx/Qn5r+YsdRY/N3O7Oj4u7aWs3312utK57Dr
on+79srvJa61BVzjU9swx33a6Rz9Y/OcY6PrzHXfvqB2zVl438Nh06YN4ed1
GWfH7yjq5b5lVOtVUHu3uwdoWmwH19TW9/4XV46nq2rHwldv+nlYF7Xpsptm
jqu5m34bDqy/vu48tSxqo3Xh1rrvCRanzL+v+1ov9zY9tGesm3NvJ+f53PXp
+dwG0B9yd2AQqvdXn51fyeZOPF161szq635s48z97JJnmu8vj+28p3YPdfWK
N5r+nmfM0VoW0+Leu5RffKZN39kmR8KC8/+inGHM+pfwelMd3gnrb/pCuGDO
2oZn4V7X+diz82rT3/BY89+njr4Ubv7Sn5efY1L7Ux6pvV/wU3MebHomOFP3
LNY6v6qfqPw792r/nTS9rnfcJ6qaI8X5wqGmB/cjYfm3/6qWxb6e/HuLbKg6
9kRmhpuiOu7zwjW7U7LAQ7U2/lbKONP1+12c8zy2/91EXaNnispz1Q+zxrco
qk6VsTlaZ/wnw8+/9O9L09b3i6/ui/Ez3opdyd8ZT4WtlbyoKbc8PTPOdml7
L30hNYfppY133vpfy/tKyvcoJ3bfUTnmvx9eb5pyOMdHnlxzpr22NbZH3XN4
tfxwXaJfaV2972nKJItf516P9zP7ytuoZZs1KH93Fu+Lz7T84uxkWPal/yPX
mBlnKr/Vql3PMpyu7E+p313F2+a8jzYey+92OS5L3/eDFtfLnnL3lHlWx6aL
/v3OpnNHdC+x4c6w8N7m80LX55whXa97Pdf3cr2v3o996IqU75JPvR7uumVR
+E3Oe559y/7fWv/gLL1f49Pluk/LkwN3cI69dP7jzfcJlf7T8b6VNY5Vs2Lu
W0axXkW2d9Y9QKYc19T89/7fD88lsukDD8+8/7p6zkj2/a9+x/Shyx9srnsf
97Xu721ayHMP3825t8vzfLv6FHluAyiS3B0YiGqf98rvqncu+M/l58Wn0rLD
N2t5ROo78Cpq93rx+LmJm7PCcvfz/iY80G6cjYS3Kn1gUp9JMvW6zjPPSt9o
NT5xi/6Ub1WejVv14Xx358+ynydSJ2j3DNb7tq72Kc16v2HZkdp7Fb9xb+K5
PuM56ERlXeNnieZ3E7Q21aJxquNTf+jytU1tWN3v4jECXsoa16Dy3Nfp+KWd
1+lkWBaPNfOXLX6PXMkfG/tuzeyL2VnsTF7/QH3GV9k/Sznv1c3t09v6lOsW
Z2zxuSErg9264L+lnheGc3yE3M/pP8w4fmqZV3QuuzOt/12Y2e+SYwMUv869
H++dv1e1vK+1f/fjTO7e7h2R1XVuV4dWda3+3ivu41vT7Xjofd4P6v/W99z9
3eo16u4OfkPR/TlnONfrXs/1vV3vq/19F7+UPf5RXu3vtXpvq+xl57hPKzAH
nr0iK3vMM+5Uo6LuW0axXr22d957gFQ5rql57v3jPP3N1IXPHHufTst269ah
+TcyoY/7Wvf3Ni21bc8uz71dnefb16fIcxtAkeTuwKBU+yH89ee/3PIddyd2
lvuytnoHXtnMvVzyea6o3L0hE8nlnfBvn//zyncK+X/b2+s6V3OgtuOPZN7z
z9S71VjEtbEY8vb/bvMM1vu2fqf2/Jf5fsOKagZ23ocSz5NpbXLsydpv/3P3
Xc7tldqYu8nHo9o++ZtW4252mjt2X6dq7tr0boZqfStjU39rTf2+WN6m7cbJ
ruZdDblRZVvE33U81eVrHlutz8yzXnauebrSvpc09KcazvFR/Uy75/SW44FX
9uVWz7fp+1Tx61zEub2b3D1fnt5B7p6zDlmfq/5eo+l83WPu3p/9oGzQuXuc
v7bbDrVJuj7nDOd6HevlXN/r9b7aL/bypb1fQ9rdaxXRVtnLznGfNohzbAfn
jrLi7ltGsV5FtHfX9wA5lp/n3v/HLcY+r35nmp3ttvjtVL/2ta7vbdpo055d
n3u7OM/nqU+R5zaAIsndgYE583pt3L1W9/U7f16+b8ozJmU1v0g+lxaVu7d6
71Cq6r1kh+Nv97rO1elb9n2LZd3zvzszXnHrW+Cp0vs2c/efaneP3Ou2rtS7
dd+sqnIfraa6J9ukbvyHtu2Z09TkqXB4Yk9pnMnquNhpz1at9smad8vvMe01
d89Vp8o70tLHvJ7pX/VcXbhd7W/0w+daHztnDtzevD27zR3zrk+uZ9OUsUGG
dHxUP9Ntrln+zIttP5Oa7/VhnYs4t4997v7uTJ/GB5LjufSYu/dlP6gYWO4e
JsOqq/5dOdOLtsW9mw607fPa9TlnSNfrcp27P9f3er2vvlcgLhfdeH94vYv3
dM+sR+t7rSLaKnvZOe7TBnGODeW8L3e+3Y/7lhGq1yDau9W8i8jdWx2X7T/T
4lrSr32t23ubdtq0Z/f3e52f5/PUp8hzG0CR5O7AIB3IMd5kJ5l3NSf47PzN
iXkUk7t39HvMUoVmfjvZyTNDr+uce/oWuXs1C5pz223htkWLwqKUcttt82vv
fcr1HNf2nr3Hbd1Re1eeheJxnuv7UdXaJO4HOhWWV54Feu7rPnkkPL9uafj2
ZRfW5ldf0p6Pcu13eZ5rC6zTxuv+NvV7stMHys83ybFcquvw0Vnfj/aX21L3
o0XRv1ffp9dT7t7x+sxkBZm/xa70l/rhc419cIdxfFQ/01vu3v4z7fLhota5
iHP7eI8zc7L0HUX8b6njWJ95se5c1IF+7gcVg8vdI5OvhwWVsclLucxffznM
v29jmDie3ipdn3OGdL1uue71Ms4PPV/vIwfW/3PDuXLWtQvCYzsOdrbfhfb3
WkW0VfayC7peFpCF5rnnrCn0vmX06iV372/unr5Nu7y3aSfnPXxX93sdnufz
1CdW1LkNoEhyd2CQqv0tWr2jp/ouy68/luO9kXV9MutvNYeWu59+sTyO/Ye/
38F7rHpf5+r0X1nTpk9Z1n19pd5p2WVaicetLCJX7HlbV9v7I/+Yq72rfe8a
njsqdYzfIbZ+2dcb17OjMX+rpsLWu77bMJ+vXrcg3PerjWHX/mPh1FvV8R4G
mbt3X6fqMZscv7s6VmjyGa66TfOWLy7pJnfvfn2erdT7Q1fc37yu+35Zfpds
/OzakCUM5/ho2yb9zFv7sM5FnNs7z90nw8PX/qem32U06+C9qgd/Wc4HF7Z+
r2qyrtXvneNy76atYdOGDWFDrWwKG1fdUGvLFZs2Rf+2Ljy3v/mdc03Otty9
ZCoc2LQifC/xndqsa/4t7Elsx67POUO6Xrdf94qM80PP1/uKqeOvh1WLZtfe
aVre974clmzYl/LpdO3utYpoq+xlj2nuXtB9y6jWS+4+jNy9y3ubdnLew3d1
v1eS/zyfpz61uRZwbgMoktwdGKQ8mUk3/aOS43sOL3dv/1vPVnXpdp177v9W
+fe8z7u59aG/e/I9hN30z3rqaN1vT+veZVW6Ny+9120qPHvzfylna/NbZ2tN
61TN7s/7mzB/5dZwPJnbt3i26lfu3kudqu/NasgtK2NGpX0vUV2HjvpU5apH
sesTT//RWf8UHtuxK+zduytsvO+G2j7Q1Bd5SMdH23Xpa+5e/DoXcW7v5v0G
ecbSnhk36b+H37TrGJdrHN6Zd5mWx9N9J/xrNP9OMoq4/O83bG+/gmdl7j5j
8uie8PCiqxu+42kc26rLc86Qrtf18xhWf/dGJ8Pe59eEb3/pQzP5WJvvlGbq
Unx/97zv1Rnf3L24+5ZRrJfcfTi5e1f3Nu3kvIfv6n4vod15Pk99mnV/bgMo
ktwdGKQ8mUm1D02e95y1Hd+9RX7Sz3Fm4neIHepgsl7XuTbGYpt3YbUd373D
erdVuUdu7uNS1vO2rhuPtH2932k5TmrpPj96hnxs4kxt3pnjMGep1CfOg1dk
vYty0Ll7j3Uq1Svx/tTqOBtp30l0sk07rUch63NqT/je+R9Jzzmjef5wXUp/
qCEdH23Xpc/jzBS9zkWc27vJ3av9zFu+T+6tR0p943JlTmdeKX/v9LH/nvLe
g6qpsP57/7Ehc5w8ejhMTExklOhvu+8pff7jn/l++M3h8mcPt/rNfdVZnrvX
RMfuzZ8vf3fx7+c8Xvv9TdfnnCFdr2O95e49Xu9b2Pfw3Nq58NHD7cdGzju+
ey9tlb3s/G3Y6jeWwxpnpoj7llGs1yDau9W8211Tz9rcvZt7m3YKvIfPLeM8
n6c+rXR6bgMoktwdGKQ8mcmJrfNKn2nfzzK6t62MlVvNA6tK98XRvdXqiex7
q+qza6G5ezgSFnz+Qx1P2+s6V3Olv7j0odZjGGa+W6/8DNXdOrdaXvke+ZMZ
/dd639ZHavVu19+mOl5KPKZAQx/tutx9cWLd31r/nVr98vzu+vS+6pgsa1t8
KPv9hv3I3XutU8mxmUwybrqN15XzxHtSvo+oZidxX+CO+0nneO7sdX2evfn/
LE0/f82rYfLU0bB3x47w/PPPhx1794dTmWMKDef4qH5mKLl7H9a5iHN7N7n7
mYMPtd0nDz78P0ufaZkX1UyVxq5p3Tav1bL5XJlXLMe7T9OnO0dy99iJp0tj
SNXvQ92fc4ZzvY71cq7v/Xrf2rML/kvuNillgMk+z3WKaKvsZedvwz+7+vHs
9za2+t1DP/LtAu9bRrFeg2jv7Iq1v6aerbl7d/c2bbS9h+/hfq+VlPN8nvq0
08m5DaBIcndgkHJlJmdeD98776Nt+1BU7/fK44I0/m1n5f1B330sffrTB1aX
7umKz93jZ+J/qDxn/kv+MWN7XefKPWr8XcMD+z/Inn5n+Vkp7b7+YC1jLrBP
b7vxGArY1tW8rHUfrXdK71Ys9Xm999XUOqY/68xM940cv8+tvmv0ky3Ghoi3
QTnDHlDu3mOdysqZSGls0IldpTwx7iOavn+/WdumP3wqx5i+DZXNkbv3tD4z
2/PJDh/qh3J81H1m8Ll7H9a5gOO9m9y9/vf3i1PHmnmz1k/wnqzfUCRUx5DJ
6h9/8OHvVLLR+/O/z63bzOmsyt2nwvFWIdHptDHAuz/nDOV6HXo81/d4vZ86
darlPtmqT0LzZ9uM4VRAW7Vddqt6Vvpwx/lw+jlsMjx83d/VssPB5O79vm8Z
Yr0G1N6ZclxTz87cvft7m5batme3595uzvPt61PkuQ2gSHJ3YJDyZiZvVTKN
+Lly6fNvNf39xO4Hau/LSctDjz07r/bskBx/+tjOexretZPs4xzrJXevjn0d
T//pK+4PR5puLafCvvX/XOojVv9bx97WeWZMg/i59bmmvmdTYXf1N5YZuXt1
fOP47/E7Rg+l3RJPvhlWLbotvJS7/2b5HjmuU9Z4DL1u61Km9vHyff+Hrrg7
pd7vhFXXlp/zUt+T2uZZJ+4rW3sfVbsOPZWxKtL7uJ4Mzy77Vstt0JdxZnqs
U2021e1UKd9IPm/XOVb32SXPpGctbz3/QFiypossoaf1KT8Pl54RNxzIrH+6
4Rwfw8zd+7HOvR7v3eXuM3lS85ixMzlQ3EYNf5p6M9x62afKmWFyX607z1+y
pHG8pfh73eo6dHQNGcfc/d2ZMaGbduFWf8uY587Kv81fszu1v2z13YHJ/rRd
n3OGcr3u9Vzfw/X+xJbSfvDhr/5LeOl4Sh/1Y0/XxvFq9XvB5HpcsjT7dyK9
X+NbL7v1MXakdg6bvSY57yNh+bWfbX3961O+3e/7lqHVa0DtnSnHNfXszN17
ubdpIUd7dnPu7fY837I+XZ7b3tr449L552MX/lPYk/tLcoDOyN2BQcqfmUyF
Zxd9pXYvd+EVC8KvNmwKmzasCQuuvaj27xfc+Hh634a6Z+k4Z1m67tnwfN20
8b/dtWx2T/ferZw++GitP338vH7jbavCpuefDxtWLg1XfX5m/MXGccN7XOfT
rzSM7XjNouVhQ7TMjSuX1JZ53vl/X+sHnBohH93SMNZ5qd47doQdzz8Vlt1y
de3Z+AstnrEbTYblld+Of+xz/xhWROuz7r6F4bJZ36u7Z+5xvSNnovvp+nrP
v+vhqL03hV/dNb98n/2X1bHbU8Zpr2RDrX4nWx3D8kOXP9im7+rJ2vrGy1u4
cmPYseP5hnp85rKrSvtG2vL6817V3uo0s9wXG9q43XcQWyvrEpfPXXlzWBkd
gzuifWnDr5aGb3/p05Xj8MuNz045tkWv63Os0q+yNP1ffzlcduWV4bLLLpsp
0f++7roF4d4Nu5uffYdxfLRqkzztdbr9Z1qelwtf596O925z97itV337r2r7
Xema8PyGcOtVn6z9W/Idbmcq3/GUts+nmsfJOL3vl7X6XnTTstI5fuPKn9Sm
6fj9bbn2/y6n63E/yD43vVl573J8nU2+47jV39LnufW2r9fa9GOfuyrcdt/6
8PyuXdH+9li4ufIdSGlck5Txebs654ThXK97Ptd3eb2Pr5VXVe6N4vLVm34e
1m16PuzatSOsv+uG2r6bdxyH6u+PSnWI223DunDrdZeGq++tPx/0fo1Pk/c+
rfqdW2l9bywfp/XXi0tvWRZu/tKfd3+ODd3k2/2/bxlKvcJg2jtb+2vqIHL3
uO9509j37davx23a071Npjz38J2fe7s/z2fX54XfPtPVua36HWbpO4sC3g8L
kEbuDgzS6X3lZ7SW77erc2DDneHL58/cR9XuKaP7t4WPtX5H0NSxLeHbn/9w
07SfKfWFiJ4tKuNEV995V2/f8vL4qXe+lPHb6TyO7wk/v/aLTcsvP3f+a/hN
xniovaxzmDoSVt10Seoyr5i/Npyq3LO2fHfg5JthecY84josWdfJPXso5XZX
nf/Rpnkl27an9Y6dej0suy69vWddc2vYk/Ugc7r8jsQPX9qiTeLfyscZR54+
gJOv17K8hvWIM+I1u0OcQWRtg1z7XSX/zjcOde91qrfx5r8tTdf++4eyg5vu
CV9L2ablbfJv4TeH302sW45t0eP6vFsZlzYu55//8dS61Z4HL/yX8GayM9ag
j49WbZKnvSr7S6ttVjsvZ2XnRa9z6P54b1vXlt4Jq1LOER//zP8Iz6S9Z+3d
LbU8Nn6fQFq/vLivbvUz9eXyJZuzxzfOcibn/p80gP0g+9w0GR6+8n+Z2W/3
v5/zb9nzPLH/mbDgygvSj8nPfT88k5H3xTo+51QN+HpdyLm+6+v9O+HZ+36Y
ut/G5epo3+0k/9657OtN84jHV0ruiz1f4xPy36dNha13fat5XaPr+fwVL5f+
HvcVTr3+5bwmxe8e7+hdDlX9vG8ZRr1K+t/eLbW5prbab/LsU/sq+3v2mGTR
cXfVv0t/73av1/OQvU17vrfJkvMevtNzb9fn+Zb16fzctrUy5ntcHkh5ZxFA
EeTuwOibCkcP7w+7du0qlf0TRzvIM6bC4b27Sv0u4mknjhY58GHOGpw6EvZH
ddhVqsPecPh4nifaXtY5uus/fqi0vB07oun37g+5Ftk8kzCxf+9MHQ53VofE
zMLheF5xG7SsT2/rXZpDrb3L63606xdK9ebU0cNhb9x/J6rH3mg9RuHnq8Oq
0/GjE6XlFr1NOl6fY+VxkeOcp9qPampqqrFE+/2BrffU+ubdkDVm6VCOjyEr
dJ1jvR/v3Tg+sSc8v2Nv6TyxY9f+lvvNqcN7ov1rb1Nf7QZT74S9O54Pe/dH
6/L8jrD/6Ln27D4Z9u+KrjfR9e1oU2O2+ltrU6ei/a16Lo+m7+T63e05ZxjX
6151f72fCscPT9TqvXf/RNfvX4zrUDoXl84LrULZ4bXVVEM7db+u/TAq9y1J
vdRruO09JtfUohR5b5Mqf3t2eu7t7jzfrj4dnNumTkX13RFemjiRY7kA3ZG7
AwDnguo7tX74TPvnzRNby++I+Oz8DscKAQAYEPc2AKNN7g4AnAv2Lf+H0vPm
ozkGjj348HdKn231/lgAgGFybwMw2uTuAMC5YOet5ffj3vDYb1t/8MTMu0Sz
x3AFABgu9zYAo03uDgCcC05s/VHt/VnzV+xsHrN76lTYt+HO2ju5Pjt/81Dq
CQCQh3sbgNEmdwcAzhW7l3+z9nwal1mXXRWuu+66cOVlsxr+/eolm0fiXbgA
AK24twEYXXJ3AOBcMnX89fCru+aHq770uXD++eeXnkXPP//vw2VXXhsW3rc+
vH78zLCrCACQm3sbgNEkdwcAAAAAgOLI3QEAAAAAoDhydwAAAAAAKI7cHQAA
AAAAiiN3BwAAAACA4sjdAQAAAACgOHJ3AAAAAAAojtwdAAAAAACKI3cHAAAA
AIDiyN0BAAAAAKA4cncAAAAAACiO3B0AAAAAAIojdwcAAAAAgOLI3QEAAAAA
oDhydwAAAAAAKI7cHQAAAAAAiiN3BwAAAACA4sjdAQAAAACgOHJ3AAAAAAAo
jtwdAAAAAACKI3cHAAAAAIDiyN0BAAAAAKA4cncAAAAAACiO3B0AAAAAAIoj
dwcAAAAAgOLI3QEAAAAAoDhydwAAAAAAKI7cHQAAAAAAiiN3BwAAAACA4sjd
AQAAAACgOHJ3AAAAAAAojtwdAAAAAACKI3cHAAAAAIDiyN0BAAAAAKA4cncA
AAAAACiO3B0AAAAAAIojdwcAAAAAgOLI3QEAAAAAoDhydwAAerb9xyEsuDyE
RXG5JIQVTwy7RgAAAEMjdwcAGDGHtoaw+oflDHvBJeX/Ll8cwp5Xh12zbI9e
HMKcT8+UHywZdo0AAACGRu4OADAqjoZwxxcb8+tkmX1pCAeODbuizR79eiJ3
XzrsGgEAAAyN3B0AYBRMhrDkE60z9/qy/9SwK9xI7g4AAFAjdwcAGAF7f5o/
c79+UQhnhl3hBLk7AABAjdwdAGAErLm4eTyZV38XwpmpEE6+FcIzP679+/TJ
jHlMRPdyK28IYcnlUbk635jw78fzvieEO64ujyO/ZHYI6x8N0ycmO6t/Mndf
uCKq+9EQNvysXJfSvG8sr1NmXaLPb3sghLtnz9Tlkeh/HzrR/Nm3XwhhyyPR
55+ISvTfPW/U/TFqs12PV/4WlS2bG7+nOLlvZtr4v63qFM9rT/28os8fSv7W
ILm8J5rbr5N1i9tt2yMz89u2rbH+x15use45nIjWf8Md+bd59X0Dpe0YlbsX
Rst9MeO7n5MzdY/rOFFZvz2PNC5vy7bG9d3w45n95I6FKW2cnG/89+PR//+L
ynzjekV13NVqf4+200S03Ed+Up5mSeU9wMvvjfantN+PJJZ5IGVd7r6zsR2K
Op4AABh7cncAgBGQzK3jPu1JJw+k54Nn3gphyWez+8ffsjBMv5+yzL2/aN2v
fuvB7usfl7np851+KiUbbVeXZSsSy0t+T1HfXhPN0+97d+bP2+cmviNY02LF
JkNY8Kk2n29e3vRLdWPwd7puf9ya+MysMP1e3d/XfCGxr+R9h+3JEFZ9o3Vd
dtRt83i/avm+gVlRuybeNZCs+w9uCuHur6RPv/DeEA5tzJ7/S7/Lnm+L/as0
3wZTIez8Rfbnq9ts3fbW67Li0ajtE+0Xfw9W3TZFHk+lzZXyHocTI/huBwAA
UsndAQBGQLK/eymznBPCq+2yuqPNuXBqFpnIdvOOazORcxz5tNw9q9RnlbHd
OetSn6ce/GX2PH+/vjlTXfvizLSrGnPr6afb9Bff/ePW9T/yYOLv14Tpah/o
btbtTztbLy/Z1rcszbGBToaw6JNt6zHTFtF+NS/HfhWXfXV99pN176XMnjPT
jp3Od8WWujrtzj9d1rpkZfY/qHznUfTxVM3wF1eP26kQtlf2w/uezjcPAACG
Su4OADACktlufZl7aQjPbA7hvanm6Z77TvPnF1wdwpJLWmR+B9KXc/eNKXnw
iuZlpukkd59T1x/8g73pn5l3Ufp0W3+XPV31XbPb5zX/7ZZqrn2y+XuKQ23G
APmgub2md9T1xd74zca/L3u6t3XrNHfPM5b+c3PT6zJ31sz/v7huW2/6Zsbn
U/5t9k0z0xWZu9dv007nm2yzxxNtNu/S9HVZvLqzdSlt66KPp8RvLJY9GUrf
g9TP56HtbecCAMBwyd0BAEZBvv7IYcUTM5Ok5LrT6+r6db+QyPIfqvwtmale
P6duzPi3Gvs5J/PLLGm5+32rQ3h/KoSDDzb/rVqXZGZdvw5/eLZFxjvZ1F61
8Wvu/0LKdFeUx9pJ9n2u71PdSvL3CLV8NmW7Vce06Xbdis7ds/L/lyq/pXh/
IoTV98wsI+3zcR/+0j4ylbqtp6tjqKRl1VHbhwPHQnjvQPpvM26/N/pbtD1f
Sxmnpdr/PG2+CxdGdZoq7wvJ8V/q61S/Tg892vj91arEdr1+/szfsnL3qL7T
x6L1eXtfedynfhxPpxJj3MTHS+J3HNNPvZJjRgAADIvcHQBgVBwP4e5W42lX
88al5Y+fSslud70cwoG47Ath9x2JHLzSDzuZNcZjZRzaV57u0MuJHHlWmD6W
0s8+qSkLrh9zPGWM9GrunqzL7PmN8032067PLZO59u1Pltuw1I/5wua2efNM
85gw9f2bW/n92vR6/DGZkdfl+N2uW9G5ezLDLeX/LTLblP2q1he/JGX8/Or2
TMuq68fWT/Y7b9hP3mrug95qvvtPz0ya9l3BQ3XfQdXE71Z9ofxe2fgdtwsu
yG7r1Kw/OXZ86M/xFEv8Bqb0PULi3QQNv7sAAGCkyN0BAEbMoeie7I6Md1FW
87bNB0N44/b2GX1Txpkyzkq78sqJtlVuPeZ4yjJLmWjKv9ePyx07nBjHPc7T
366MC5Mc4z1evxMp79+sttlTb4TwwrzEv6W84zVVSl1febd5G9y3Jfvzedet
6Ny9aT+5sHX22/T5WXX9t2NRHZd8ovEztz9W/lNq7l63/3S1n+SYb6tpq39/
psVYTnlz9/rvELKWW8TxVFX/O4vS+kTb7c6/y1hHAABGidwdAGBEnZwI4ZEb
0rO7eLzyZN/ttrn70lDKTOtzuzylKWtM0TILzspEU+pyX2Lc6pS+2rW8NdnH
efY1IWyve7/lwoUhLK/7/uL21SE8nugj/2absd3rJTL7sOLp5v7b1fHIe1m3
onP3pve+Vsbcyfv5OKc/mfhMctydar/1TnP3XPtJjvm2zN3jbfGJ5um7yt2T
mXmfjqeq+n2uuj71+5zcHQBgZMndAQBGxPtvheljp5r//b19zeNvxHnlwbub
M73l94aw/p7m8sjPKuN5p4xHPvvSEDakTLP+zmi6eIz2HHXvNndP1iU57str
P22q60wGnZz+whDm1Y0bEvcvr3/vbPx+2oaxttvkz0nJnL9pfnXvF+1l3Zry
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
v6IoiqIogy8AwFiSuwPAmBj2c7+iKIqiKIMvAMBYkrsDwJgY9nO/oiiKoiiD
LwDAWJK7A8CYGPZzv6IoiqIogy8AwFiSuwPAmBj2c7+iKIqiKIMvAMBYkrsD
wJgY9nO/oiiKoiiDLwDAWJK7A8CYGPZzv6IoiqIogy8AwFiSuwPAmBj2c7+i
KIqiKIMvAMBYkrsDwJgY9nO/oiiKoiiDLwDAWJK7A8CYGPZzv6IoiqIogy8A
wFiSuwPAmBj2c7+iKIqiKIMvAMBYkrsDwJgY9nO/oiiKoiiDLwDAWJK7A8CY
GPZzv6IoiqIogy8AwFiSuwPAmBj2c7+iKL2VuZeGsHJxCE89EJV7Qlj9kxCW
XDL8eimKMtoFABhLcncAGBPDfu5XFKVcXjmWODiPhjDvUy2muTCElw5mH9t/
2Dj8dTqXSsfbbwTrNsrroBRfAICxJHcHgDExqOf7BZe0L/MuGH4OoYxhubB5
X2r1+bmzGj87t838G+Z9Uf/WY9+JxMF5MlpeVuYZrfPEqdbH9t4fjcC2GdOy
5MYQnnoohJ2bQ9gVl1+H8Mw90b9/saDtN+CSt26jvA5K8QUAGEtydwAYE4N4
tn/oxQ4qNBXCycMh7HpogHnPhSHMu2imtMthz+kygm21793m3ejRizPrP31s
qvGzp57Nnvd9WzqYd6/r0UHmed/T7Q+lVV8Y/rYZqzIrhC3bQni/TbuePBDC
8q/0tv0GXeTuSloBAMaS3B0AxsQgnu07yt0TXvjp4Ov3xu3Dz0NGtYxgW00/
+WrKfjMv/fOzbwrTZ5IfPpz5/UHzvCdDuPPv+rMunWSehyab1/nM0RCeeSCE
XS+H8N6E8UE6KQsXh+l2eXvS3sS+P8qZtdxdSSsAwFiSuwPAmBjEs30vuXvs
hR/3tX7TWxNjZI9AljyqZSTb6vbHmveZg3fn/2zs/oy+4U196bMz+p5L3sxz
9hUpGXH02UWfHP62GMdy+4rW559W9tZ9LzjKmbXcXUkrAMBYkrsDwJgYxLN9
Wu7+/vEQThybKe+1Gqt6MoQln+hf/ZLZ6ihkyaNaRrGtrl/UvMv8aWfqZ6ef
fiN9F0vtHz8rTJ9MfO6PW/vYtnlz90vD9HvJeqWvr9Km/GBJi/NOKI95NbEv
hGPJbVPZPnfXjfc+ypm13F1JKwDAWJK7A8CYGMSzfVruvialf/HcS8P0ul+n
13NvH8eb2Z/I/F8bwNg241pGsa3ScuhwNH2clbTxWWK/X58y3znNY9L083sG
ufvgS9b+8Hb0/LLos42fvf6KaBsdq3xgKoRViXH+RzmzlrsraQUAGEtydwAY
E4N4tk/L3R/9evbnlz3Z/Pl2ueKCOSE88+ty39RDB6IS/XfX4yEs/1b65+fO
CmHR5SEsWdg8ZseRaLols0O4+8ZKScyj4W9RWXJJRr0uDOGOGxs/u+CClLpf
3fiZeXWfWb0ihAOVdZp4OYSnfpJvumi9wq4XKm1xMIS3o/9u+Vl326+Xtqov
86L6PvXEzPrE22jP5mgdb+h9H0t+H5D2G4m0HL1monn8mFuWNn9swzf7t35t
M89of1qQsR3i8W/uqG6H2b3vW8n9ePniEHZunjm+3o7a61CraXIsf/m9Ibz6
cmV+UXl1Y/SZbzTPY/allWP7wMyydz7Q+3g/izPGHHrtFy2nm34qqsvjKftB
q+3X8/HYwzbItW91+Lmm7dzh+TfP/tFrm827IoT1j87sY3Hd9kT72OqfNC6z
Vmb3Zx3r9+O4PvEx9/aBmeNuS7S/Lbqot3252wIAjCW5OwCMiUE823eau6f1
580YNyQe6zocONY8/3rvTzS/C7Mpp21lciZ7iuuWzDw/2J1etx8sbZ5V2rjj
+08n2ua/lTPiE1PN0/9hY5vprgnhUIt1i9ui0/6r3bZV/TZ69a320z3X/Tj+
qe9WfTTRH3nx6ubP1HL4qK1/kdhHVmxPfHiqcVyRotevTeY5vfaVNsuoW1Z1
um73rbjE3yPsSmnXpDOH09sla/nX3xQtP6Ofeezw43XnjqdbLDhqn+Vf6f68
NJGyXyfboJPStP0myrnyobQxairaHY9FbIMc+1bHn+v1/NvXc9iFIezIGE+q
pZRzVxHrGB+767a0X/yxF5p/Y9HvAgCMJbk7AIyJQTzbF5G7p/V3/8H8lH6/
WSbbjMXcysnG3D3vGB9puXvaOCXJuux8IExnVW/3j7OnOzkRQp72+OBAZ9uv
27bqeBuFcv/5bvax21N+I7H3R43ZV1o2X2/73MbPb068QzYcbx67psj1a5d5
5n4/cd10Xe5b0092+i7kqfR303a7j77w0xA258lOu3yf7Oyb0meX/O6l1+Mk
8/cVdTKOx8K2QZ59q9PP9Xr+7ds57MLssYPaSlnXAtZxOtd+XGdVxjbsRwEA
xpLcHQDGxCCe7TvN3fO8J3P2NZ3lnSV1WU2yn2VLk61z96y++N3m7q2subi7
6ZJajZeSLF231ZwutlHk4C8738fS9pnDDzZ+5s36PO54CNsS/cePrE2sd6LP
bdM+WPD69aO/e5f71vSO3+efrirt+6de9tG8uhlz//aUMWZOPdvbea7g47Gw
bZBj3+r4c72ef/vVZlnvTT55LCrt8vipxnUtYh3Txqpq6XD6eyn6VQCAsSR3
B4AxMYhn+9Tc/eKMz2f0V0yMz5KeSR0PYf0/l8cIXjg/hLdTxirYVMlqHorH
/d0WwkTK+AHvTYSwZ1ulvBB97vGZsaQHnrtPlccAPvBGCO8fbsyFWk13Ih4L
+aEQdmXkUJ2Mp9FlW02/lDE2w8TG8ljKK+8J0ydTxjuJddrns912SWZoH+wN
4fYViQkOtJ5fIi8vfP3aZZ4LF0dVjNp4z8spM5yq2wYbZ/bXbvetZH/w94+G
sO2BEJbfUB5nPGvcjWR/8Zb76L5oH30kTB/LkYfG67Qtq/93ytj8bcr02pR5
9frO3KKPx6K2QZ59q8PP9Xz+7Uebpf6GIdq3VteNv742ZbyX+PuW1XdGdf9J
4euY+l3ZRHSOXHBR+Vp39+K6cYhSxrrqdwEAxpLcHQDGxCCe7dNy9w3fLb+v
c95F5bLo6hDi9xVm9S+s7+f9gyXNfz8zkd5P8O1Eppfs0zo7pZ/0az/NXpdB
5u6ndrbu+5g63VTUto3jpYQVKVlTVp1blU7aKquf53P/nPjsrPTvWbrpe9w0
Dn3duDALExn7H9aX+qs3tV11jObr5zfXqX4cmn6sX+4xPi5MGetoawf7SGi/
b82pjMtz5mgIq7+bf957f5pj+VF7PJrIX9PGWo+dSNRz4b0pH8r57s/6dVuX
kod28huQAR2PhWyDTvatPJ8r8vxbZJulnW9fmNfcpi8l3sVwKuXYKWod096N
kdbu90Xnp/UFvF+60wIAjCW5OwCMiUE82+celzpDIqtJHUtgTUb/+aZxvxNj
dOfNxqtlULl7njHYm6abSu9HPfuK5vESssajaFU6aKvUbfT79RltmtFPtcNx
u5vHb5/J0Zty1tLY7xc2j3W+6Tvl+d2Sku/WtW1f1i/3GB8d7IPd7ltF7Q9p
+2jaGORp4/P/IeO7l6bvMbrI3ZPZayzzNzg5y6CPx06OyQJz90LPv0W2WVM2
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
onpNy1LfPOWpEB7WdWEDRNYMr+1X6u631bokg2Tduw/7Wo14jG7tHut821gc
sI2985O3u18DztWU+xdfZyn0r+Uz8euqvjX8PnXl1ruX+fBPo+/vvWOjbdeW
HXLCYzDEubXtczDV+2/S97Dy9wvDb1J4/k0It2Nrqo+5j6cia1Ft6dHoc/RH
CQCQJb07AGSiibH9UL172YMtxrf1ZLUznwrhi+gE7HorkfnOfesTRFTnPPd1
QBFfnw9hsTInOvPefejXqlxz5/6A+edVtxLM9axbt7vstOrWWd53uuY+W8y9
T7l/v41ch7dUXV9+0r37dM369X2Kx6rO1x21d4/NO9/2NXvH7N3LzBTPP2it
oZjqsUz895jsGAxzbm33dp0keP9N/R42c3y47elV83uokfexeK8Mq8N8EfCs
/5oBkw4AkCW9OwBkoomx/fFr/c8bmXf+Su5H1v2oW/P71LkQ1gesE1J2p5+d
HdzN7ZgO4eGA/jTWyfx5wDoidw78f9sq60XE1izpu/7qNuc8DnO/v1W7ozHm
VY7yWp29EMKTAXNHH98N4eBP05xvdd3hN1cH7lN0PefIdX2jSbV/pyJ/K2Uf
V11Po/qbkH/X7Nuo51ZnW2q+/+q8LAubr8uRyvbe2z/a88eOWc36PuEv1bWc
RrwGb1+mQriyPPg4lu7f6F/7fVJ/jymOwTDn1jC3e3H7Md5/U79m4/x2oVT3
uTTOPu7b9+paNDFrNevfTzoAQJb07gCQiabH+ZPMu2+GcPqDEObnNnP2vRAO
/Hy4x9g7Xdzv0MvHOP128bg/GvCcxe3nT4Vw5dTm7U/sav91aCrDvlZ99yn+
PVHcZ/cW98kpKfZv95s951TxGAd/2eI+TRX78MHL8/v071+v41WXd4v3jRP7
Xp7b5XGY3bG972C+y8dgu+fWKOdgivffcbK/+puVp5trqV85F8LNCz25XN+D
X/rF5PZxZ3EcD769uT7/i/eHXe3+PQEAWdK7A0Am2hrvi4iIpMrn/3n1s23l
V4Nvvz8yN/7vv2t/P5oMAJAlvTsAZKLtcb+IiMhYmQob1WVo/hi/hvKLxHr3
c1usf/a6BQDIkt4dADLR9rhfRERkrEz1X/Ng/a/1a8V/GLv+6tMQ9n7vO7Av
DQYAyJLeHQAy0fa4X0REZNx8XnOt57W7Idw+v7nO+8d36q+Pemd3+/vQdACA
LOndASATbY/7RURExs2e90f/HLz3h/a3v40AAFnSuwNAJtoe94uIiKTIzL6w
sf5s+59/66shzL7R/na3FQAgS3p3AMhE2+N+ERGRlDkwE8LN5RDufxnC47UQ
1h9vZu1BCKt3QrhyKIS9P2l/O9sOAJAlvTsAZKLtcb+IiIg0HwAgS3p3AMhE
2+N+ERERaT4AQJb07gCQibbH/SIiItJ8AIAs6d0BIBNtj/tFRESk+QAAWdK7
A0Am2h73i4iISPMBALKkdweATLQ97hcREZHmAwBkSe8OAJloe9wvIiIizQcA
yJLeHQAy0fa4X0RERJoPAJAlvTsAZKLtcb+IiIg0HwAgS3p3AMhE2+N+ERER
aT4AQJb07gCQibbH/SIiItJ8AIAs6d0BIBNtj/tFRESk+QAAWdK7A0Amdv6g
/bG/iIiINJfysx8AyJLeHQAycfjX7Y//RUREpLmUn/0AQJb07gCQh/8+fRLC
b77ffgcgIiIik0/xmd/57AcAsqR3B4B8bPzjU927iIjI657is77zmQ8AZEvv
DgB56cx9K393br13ERGR1yvlZ3vxGW+eOwDkT+8OAAAAAADp6N0BAAAAACAd
vTsAAAAAAKSjdwcAAAAAgHT07gAAAAAAkI7eHQAAAAAA0tG7AwAAAABAOmXv
fuHCBb07AAAAAAAkoHcHAAAAAIB09O4AAAAAAJCO3h0AAAAAANLRuwMAAAAA
QDp6dwAAAAAASEfvDgAAAAAA6ejdAQAAAAAgHb07AAAAAACko3cHAAAAAIB0
Dh8+rHcHAAAAAIBE9O4AAAAAAJCO3h0AAAAAANLRuwMAAAAAQDp6dwAAAAAA
SKfbuy8tLendAQAAAABgTHp3AAAAAABIR+8OAAAAAADp6N0BAAAAACAdvTsA
AAAAAKTT27svLy+3vTkAAAAAAJA1vTsAAAAAAKRT9u4XL17UuwMAAAAAQAJ6
dwAAAAAASEfvDgAAAAAA6Rw5ckTvDgAAAAAAiejdAQAAAAAgHb07AAAAAACk
0+3dr169qncHAAAAAIAx6d0BAAAAACAdvTsAAAAAAKTT27tfu3at7c0BAAAA
AICslb37/Py83h0AAAAAABLQuwMAAAAAQDqzs7N6dwAAAAAASETvDgAAAAAA
6XR79+XlZb07AAAAAACMSe8OAAAAAADplL37pUuXOr37yspK25sDAAAAAABZ
07sDAAAAAEA6R48e1bsDAAAAAEAiencAAAAAAEin27uX11TVuwMAAAAAwHj0
7gAAAAAAkE7Zuy8sLHR69+vXr7e9OQAAAAAAkLVjx47p3QEAAAAAIBG9OwAA
AAAApNPt3cu13fXuAAAAAAAwnrJ3v3z5cqd3v3HjRtubAwAAAAAAWZubm9O7
AwAAAABAInp3AAAAAABIp9u7l2u7690BAAAAAGA8x48fD4uLi53e/ebNm21v
DgAAAAAAZO3kyZN6dwAAAAAASOTMmTNhaWmps8ZM2bv/D0f3ES0=
    "], {{0, 812}, {1502, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1502, 812},
  PlotRange->{{0, 1502}, {0, 812}}]], "Input"]
}, Open  ]]
},
WindowSize->{808, 652},
WindowMargins->{{236, Automatic}, {Automatic, 50}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {60, 58}, PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", FontSize -> 30, FontFamily -> 
              "Source Sans Pro", FontWeight -> "SemiBold", FontColor -> 
              GrayLevel[1], ShowStringCharacters -> False, StripOnInput -> 
              False]}}, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         ButtonFunction :> SystemOpen["http://challenges.wolfram.com/"], 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        "\" \"", "\" \"", "\"\""}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, 
   CellFrameMargins -> {{50, 0}, {4, 4}}, CellFrameColor -> 
   RGBColor[1., 0.47843137254901963`, 0.19607843137254902`], Background -> 
   RGBColor[1., 0.47843137254901963`, 0.19607843137254902`], 
   ShowStringCharacters -> False], 
  Cell[" ", "Text", CellMargins -> 0, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[1., 0.8862745098039215, 0.35294117647058826`]]},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> True, ShowGroupOpener -> False, 
    CellMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 35, FontWeight -> "Plain", FontColor -> 
    RGBColor[1., 0.478431, 0.196078]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    True, ShowGroupOpener -> False, 
    CellMargins -> {{66, Inherited}, {Inherited, 20}}, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontWeight -> "SemiBold", FontColor -> RGBColor[1., 0.478431, 0.196078]], 
   Cell[
    StyleData["Subsection"], ShowCellBracket -> True, ShowGroupOpener -> True,
     CellMargins -> {{66, Inherited}, Inherited}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "SemiBold", FontColor -> 
    RGBColor[1., 0.478431, 0.196078]], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, Inherited}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 15, FontWeight -> "Plain", FontColor -> 
    GrayLevel[0.1]], 
   Cell[
    StyleData["WCIntroDivider", StyleDefinitions -> StyleData["Output"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, CellMargins -> {{66, 0}, {-2, 35}}, 
    CellGroupingRules -> {"SectionGrouping", 0}], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 20}, {60, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[1., 0.478431, 0.196078], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 20}, {20, 50}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {Inherited, 20}}, 
    CellFrameColor -> RGBColor[1., 0.478431, 0.196078]], 
   Cell[
    StyleData["StandardForm"], FontFamily -> "Source Sans Pro", FontWeight -> 
    "Bold"], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["CodeAssistCompletion"], FontFamily -> "Source Sans Pro", 
    FontWeight -> "SemiBold", FontSlant -> "Plain"], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["Input"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> RGBColor[1., 0.478, 0.196]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> RGBColor[0., 0.522, 0.804]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "SemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[1., 0.478431, 0.196078]]}, Visible -> False, FrontEndVersion -> 
  "11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 59, 0, 69, "Title"],
Cell[642, 24, 130, 3, 28, "Text"],
Cell[CellGroupData[{
Cell[797, 31, 31, 0, 61, "Section"],
Cell[831, 33, 73, 0, 28, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[941, 38, 47, 0, 61, "Section"],
Cell[991, 40, 205, 5, 51, "Text"],
Cell[CellGroupData[{
Cell[1221, 49, 139, 3, 32, "Input"],
Cell[1363, 54, 102, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1502, 61, 35, 0, 29, "Subsection"],
Cell[CellGroupData[{
Cell[1562, 65, 132, 3, 32, "Input"],
Cell[1697, 70, 95, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1829, 77, 131, 3, 32, "Input"],
Cell[1963, 82, 94, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2094, 89, 153, 4, 32, "Input"],
Cell[2250, 95, 113, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2400, 102, 141, 3, 32, "Input"],
Cell[2544, 107, 104, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2685, 114, 118, 3, 32, "Input"],
Cell[2806, 119, 122, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3001, 130, 598, 19, 65, "WCIntroDivider"],
Cell[3602, 151, 39, 0, 70, "WCIntroDividerLine"],
Cell[3644, 153, 590, 15, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4271, 173, 7099, 162, 128, "SubmitRow"],
Cell[11373, 337, 51905, 855, 353, "Input"]
}, Open  ]]
}
]
*)

